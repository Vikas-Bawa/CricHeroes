{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chicmic/Documents/React-JavaScript-Study/src/Routes/DocumentTitle.js\",\n    _s = $RefreshSig$();\n\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"react-router-dom\";\nimport { AUTH_ROUTES } from \"./AuthRoutes\";\nimport { PRIVATE_ROUTES } from \"./PrivateRoutes\";\nimport { PUBLIC_ROUTES } from \"./PublicRoutes\";\n\nconst pathToRegexp = require(\"path-to-regexp\");\n\nconst DocumentTitle = ({\n  isAuthenticated = false\n}) => {\n  _s();\n\n  const location = useLocation();\n  const matchedRoute = PUBLIC_ROUTES.concat(isAuthenticated ? PRIVATE_ROUTES : AUTH_ROUTES).find(route => pathToRegexp(route.path).test(location.pathname));\n  const title = matchedRoute ? matchedRoute.title : \"\";\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DocumentTitle, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = DocumentTitle;\nexport default DocumentTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentTitle\");","map":{"version":3,"sources":["/home/chicmic/Documents/React-JavaScript-Study/src/Routes/DocumentTitle.js"],"names":["Helmet","useLocation","AUTH_ROUTES","PRIVATE_ROUTES","PUBLIC_ROUTES","pathToRegexp","require","DocumentTitle","isAuthenticated","location","matchedRoute","concat","find","route","path","test","pathname","title"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,eAAe,GAAG;AAApB,CAAD,KAAiC;AAAA;;AACrD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,YAAY,GAAGN,aAAa,CAACO,MAAd,CAAqBH,eAAe,GAAGL,cAAH,GAAoBD,WAAxD,EAAqEU,IAArE,CAA2EC,KAAD,IAC7FR,YAAY,CAACQ,KAAK,CAACC,IAAP,CAAZ,CAAyBC,IAAzB,CAA8BN,QAAQ,CAACO,QAAvC,CADmB,CAArB;AAGA,QAAMC,KAAK,GAAGP,YAAY,GAAGA,YAAY,CAACO,KAAhB,GAAwB,EAAlD;AACA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAZD;;GAAMV,a;UACaN,W;;;KADbM,a;AAcN,eAAeA,aAAf","sourcesContent":["import { Helmet } from \"react-helmet\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { AUTH_ROUTES } from \"./AuthRoutes\";\nimport { PRIVATE_ROUTES } from \"./PrivateRoutes\";\nimport { PUBLIC_ROUTES } from \"./PublicRoutes\";\n\nconst pathToRegexp = require(\"path-to-regexp\");\n\nconst DocumentTitle = ({ isAuthenticated = false }) => {\n  const location = useLocation();\n  const matchedRoute = PUBLIC_ROUTES.concat(isAuthenticated ? PRIVATE_ROUTES : AUTH_ROUTES).find((route) =>\n    pathToRegexp(route.path).test(location.pathname)\n  );\n  const title = matchedRoute ? matchedRoute.title : \"\";\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta></meta>\n    </Helmet>\n  );\n};\n\nexport default DocumentTitle;\n"]},"metadata":{},"sourceType":"module"}